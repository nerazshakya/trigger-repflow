name: 'Trigger and Wait for this repository workflow'
description: 'Triggers a workflow in this repository and waits for its status (completed, failed, or canceled).'
inputs:
  token:
    description: 'GitHub token for Repo B to trigger workflows.'
    required: true
  repo_owner:
    description: 'Owner of Repo B (e.g., GitHub username or organization).'
    required: true
  repo_name:
    description: 'Name of Triggerd Repository.'
    required: true
  event_type:
    description: 'The event type to trigger in Triggerd Repository (e.g., trigger-workflow).'
    required: false
    default: 'trigger-workflow'
  timeout_minutes:
    description: 'Maximum time to wait for the workflow status (in minutes).'
    required: false
    default: '30'
  poll_interval_seconds:
    description: 'Interval (in seconds) between status checks.'
    required: false
    default: '30'
runs:
  using: "composite"

  steps:
    - name: Install Python Dependencies
      shell: bash
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_REPO_OWNER: ${{ inputs.repo_owner }}
        INPUT_REPO_NAME: ${{ inputs.repo_name }}
        INPUT_EVENT_TYPE: ${{inputs.event_type}}  
      run: pip install -r "$GITHUB_ACTION_PATH/requirements.txt"

    - name: Run Notification Script
      shell: bash
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_REPO_OWNER: ${{ inputs.repo_owner }}
        INPUT_REPO_NAME: ${{ inputs.repo_name }}
        INPUT_EVENT_TYPE: ${{inputs.event_type}}    
      run: python "$GITHUB_ACTION_PATH/notify.py"


